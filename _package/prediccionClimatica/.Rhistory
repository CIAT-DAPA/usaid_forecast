#   }
#
#   todo3=sapply(1:dim(probabilidades)[2], function(i) valores2(masprobable2[,i],todo[,i],resumen2[,i],dif[,i]))
#
#   resumen3=rbind(resumen2[1,],round(medias,2),resumen2[2,])
#   row.names(resumen3)=c("Mín","Promedio","Máx")
#
#   resumenf=rbind(resumen3,c("Años",rep("",dim(probabilidades)[2]-1)),todo3) ###Resumen con min max y prom de los escenarios analogos
#   colnames(resumenf)=names(probabilidades)
#
#   ###Salida de años analogos y resumen
#   write.csv(todo2,file="Pronosticos/añosanalogos.csv")
#   write.csv(resumenf,file="Pronosticos/resumen_añosanalogos.csv")
#
#---------------------------------------------------------------------------------#
#----------Generación de todos los escenarios definidos por el usuario------------#
#---------------------------------------------------------------------------------#
num_esc1=100
a=masprobable2
a=as.data.frame(a)
names(a)=month.prob
if(any(names(a)=="January")){ escenario_Ene=list()}
if(any(names(a)=="February")){ escenario_Feb=list()}
if(any(names(a)=="March")){ escenario_Mar=list()}
if(any(names(a)=="April")){ escenario_Abr=list()}
if(any(names(a)=="May")){ escenario_May=list()}
if(any(names(a)=="June")){ escenario_Jun=list()}
if(any(names(a)=="July")){ escenario_Jul=list()}
if(any(names(a)=="August")){ escenario_Ago=list()}
if(any(names(a)=="September")){ escenario_Sep=list()}
if(any(names(a)=="October")){ escenario_Oct=list()}
if(any(names(a)=="November")){ escenario_Nov=list()}
if(any(names(a)=="December")){ escenario_Dic=list()}
esc_consolidado=list()
for(w in 1:num_esc1){
esc_consolidado[[w]]=cbind(
if(any(names(a)=="January")){ escenario_Ene[[w]]=sample(a$January,1)},
if(any(names(a)=="February")){ escenario_Feb[[w]]=sample(a$February,1)},
if(any(names(a)=="March")){ escenario_Mar[[w]]=sample(a$March,1)},
if(any(names(a)=="April")){ escenario_Abr[[w]]=sample(a$April,1)},
if(any(names(a)=="May")){escenario_May[[w]]=sample(a$May,1)},
if(any(names(a)=="June")){escenario_Jun[[w]]=sample(a$June,1)},
if(any(names(a)=="July")){escenario_Jul[[w]]=sample(a$July,1)},
if(any(names(a)=="August")){ escenario_Ago[[w]]=sample(a$August,1)},
if(any(names(a)=="September")){escenario_Sep[[w]]=sample(a$September,1)},
if(any(names(a)=="October")){escenario_Oct[[w]]=sample(a$October,1)},
if(any(names(a)=="November")){escenario_Nov[[w]]=sample(a$November,1)},
if(any(names(a)=="December")){escenario_Dic[[w]]=sample(a$December,1)})
}
escenarios_final1=do.call("rbind",esc_consolidado)
orden=match(month.prob,colnames(year_sort))
ord_col=order(match(sort(orden),orden))
#     escenarios_final=rbind(escenarios_final1[,ord_col],todo3)
#     nom=c(seq(1,num_esc1),"min","prom","max")
escenarios_final=escenarios_final1[,ord_col]
nom=seq(1,num_esc1)
escenarios_final=as.data.frame(escenarios_final)
names(escenarios_final)=month.prob
#---------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------#
#----------------------Creación de escenarios a nivel diario----------------------#
#---------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------#
print("Generando escenarios...")
esc_final_diarios=list()
if(any(names(a)=="January")){ esc_diario_Ene=list()}
if(any(names(a)=="February")){ esc_diario_Feb=list()}
if(any(names(a)=="March")){ esc_diario_Mar=list()}
if(any(names(a)=="April")){ esc_diario_Abr=list()}
if(any(names(a)=="May")){ esc_diario_May=list()}
if(any(names(a)=="June")){ esc_diario_Jun=list()}
if(any(names(a)=="July")){ esc_diario_Jul=list()}
if(any(names(a)=="August")){ esc_diario_Ago=list()}
if(any(names(a)=="September")){ esc_diario_Sep=list()}
if(any(names(a)=="October")){ esc_diario_Oct=list()}
if(any(names(a)=="November")){ esc_diario_Nov=list()}
if(any(names(a)=="December")){ esc_diario_Dic=list()}
for (n in 1:nrow(escenarios_final)){
esc_final_diarios[[n]]=rbind(
if(any(names(a)=="January")){esc_diario_Ene[[n]]=data_d[data_d$month=="1"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="January")],]},
if(any(names(a)=="February")){esc_diario_Feb[[n]]=data_d[data_d$month=="2"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="February")],]},
if(any(names(a)=="March")){esc_diario_Mar[[n]]=data_d[data_d$month=="3"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="March")],]},
if(any(names(a)=="April")){esc_diario_Abr[[n]]=data_d[data_d$month=="4"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="April")],]},
if(any(names(a)=="May")){esc_diario_May[[n]]=data_d[data_d$month=="5"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="May")],]},
if(any(names(a)=="June")){esc_diario_Jun[[n]]=data_d[data_d$month=="6"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="June")],]},
if(any(names(a)=="July")){esc_diario_Jul[[n]]=data_d[data_d$month=="7"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="July")],]},
if(any(names(a)=="August")){esc_diario_Ago[[n]]=data_d[data_d$month=="8"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="August")],]},
if(any(names(a)=="September")){esc_diario_Sep[[n]]=data_d[data_d$month=="9"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="September")],]},
if(any(names(a)=="October")){esc_diario_Oct[[n]]=data_d[data_d$month=="10"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="October")],]},
if(any(names(a)=="November")){esc_diario_Nov[[n]]=data_d[data_d$month=="11"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="November")],]},
if(any(names(a)=="December")){ esc_diario_Dic[[n]]=data_d[data_d$month=="12"&data_d$year==escenarios_final[n,which(names(escenarios_final)=="December")],]})
}
for (n in 1:nrow(escenarios_final)){
ord=order(match(as.numeric(esc_final_diarios[[n]]$month),orden))
esc_final_diarios[[n]]=esc_final_diarios[[n]][ord,]
}
#---------------------------------------------------------------------------------#
#-----------------Exporta los escenarios a nivel diario a .csv--------------------#
#---------------------------------------------------------------------------------#
dir.create(paste(path_output,format.Date(Sys.Date(),"%Y%m%d"),sep="/"),showWarnings=F)
dir.create(paste(path_output,"/",format.Date(Sys.Date(),"%Y%m%d"),"/Escenarios_",station,sep=""),showWarnings=F)
for(k in 1:nrow(escenarios_final)){
write.csv(esc_final_diarios[[k]],paste(path_output,"/",format.Date(Sys.Date(),"%Y%m%d"),"/Escenarios_",station,"/escenario_",nom[k],".csv",sep=""),row.names=F)
}
print("Proceso finalizado exitosamente")
}
path_data_d <- dir_stations
data_d_all = list.files(path_data_d,full.names = T)
data_prob_all=read.csv(path_prob,header=T,dec=".")
station_names = unique(data_prob_all$id)
start.time <- Sys.time()
for(x in 1:length(data_d_all)){
data_prob = data_prob_all[which(data_prob_all$id==station_names[x]),]
gen_esc_daily(prob = data_prob,data_d = data_d_all[x],path_output,station = station_names[x])
}
x=1
data_prob = data_prob_all[which(data_prob_all$id==station_names[x]),]
prob = data_prob
data_d = data_d_all[x]
station = station_names[x]
data_d=read.csv(data_d,header=T,dec=".")
#attach(data_d,warn.conflicts =F)
data=aggregate(as.numeric(data_d$prec),list(data_d$year,data_d$month),sum)
names(data)=c("year","month","value")
probabilidades=as.data.frame(data_prob[1:6,])
month.prob = month.name[probabilidades$month]
cat("Calculando terciles de la precipitación...")
cat("Calculando terciles de la precipitación... \n\n\n")
cat("\n Calculando terciles de la precipitación... \n\n")
prec_sort = matrix(NA,nrow(data),6)
year_sort = matrix(NA,nrow(data),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
colnames(prec_sort)=month.prob
colnames(year_sort)=month.prob
prec_month
year_month
prec_sort
year_sort
data
View(year_sort)
data[data$month==i,3]
data
prec_trend = matrix(NA,nrow(data),6)
prec_sort = matrix(NA,nrow(data),6)
year_sort = matrix(NA,nrow(data),6)
prec_trend = matrix(NA,nrow(data),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
prec_trend[,i-month(Sys.Date())+1] = data[data$month==i,3]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
View(prec_trend)
data[data$month==i,c(1,3)]
min(data$year)
max(data$year)
i
v=1
ts(start = min(data$year),end = max(data$year),prec_trend[,v])
by_month=ts(start = min(data$year),end = max(data$year),prec_trend[,v])
sen.res=sens.slope(by_month)
library(ggplot2)
library(trend)
library(ggthemes)
install.packages("trend")
library(trend)
sen.res=sens.slope(by_month)
sen.res
by_month
1980-2015
by_month=ts(start = 1,end = 35,prec_trend[,v])
sen.res=sens.slope(by_month)
sen.res
t <- (1:length(by_month))
s.pred <- sen.res$intercept + sen.res$b.sen * t
s.pred
sen.res$intercept
data
data_d
data_temp=aggregate(data_d[,4:5],list(data_d$year,data_d$month),mean)
data_temp
names(data_temp)=c("year","month","t_max","t_min")
temp_trend = matrix(NA,nrow(data),6)
prec_sort = matrix(NA,nrow(data),6)
year_sort = matrix(NA,nrow(data),6)
temp_trend = matrix(NA,nrow(data),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
temp_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3:4]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
t_max_trend = matrix(NA,nrow(data),6)
t_min_trend = matrix(NA,nrow(data),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
t_max_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
t_min_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
t_max_trend
colnames(t_max_trend)=month.prob
colnames(t_min_trend)=month.prob
t_max_trend
by_month=ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res=sens.slope(by_month)
sen.res
t <- (1:length(by_month))
s.pred <- sen.res$intercept + sen.res$b.sen * t
s.pred
plot(s.pred)
plot(data_temp[,1])
data_temp[,1]
plot(t_max_trend[,1])
plot(t_max_trend[,1],type="l")
t_max_trend[,1]
nrow(data)
data_temp[data_temp$month==i,3]
nrow(data_temp)
prec_sort = matrix(NA,nrow(data),6)
year_sort = matrix(NA,nrow(data),6)
t_max_trend = matrix(NA,nrow(data_temp),6)
t_min_trend = matrix(NA,nrow(data_temp),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
t_max_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
t_min_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
t_max_trend
data_temp[data_temp$month==i,3]
i
probabilidades$month
prec_sort
data$year
data_temp
prec_sort = matrix(NA,length(unique(data$year)),6)
prec_sort
prec_sort = matrix(NA,length(unique(data$year)),6)
year_sort = matrix(NA,length(unique(data$year)),6)
t_max_trend = matrix(NA,length(unique(data$year)),6)
t_min_trend = matrix(NA,length(unique(data$year)),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
t_max_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
t_min_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
t_max_trend
plot(t_max_trend[,1],type="l")
lines(s.pred,col="red")
install.packages("data.table")
library(data.table)
data.table::between(0, en.res$b.sen.lo, sen.res$b.sen.up)
data.table::between(0, sen.res$b.sen.lo, sen.res$b.sen.up)
sen.res$b.sen.lo
sen.res$b.sen.up
data.table::between(0, sen.res$b.sen.lo, sen.res$b.sen.up)
if(data.table::between(0, sen.res$b.sen.lo, sen.res$b.sen.up)){
cat("te")
}
if(data.table::between(1, sen.res$b.sen.lo, sen.res$b.sen.up)){
cat("te")
}
year(Sys.Date())-max(data_temp$year)
t_new = year(Sys.Date())-max(data_temp$year)
s.pred_new <- sen.res$intercept + sen.res$b.sen * t_new
s.pred_new
sen.res$b.sen * t_new
sen.res$b.sen
by_month
t_new=2
s.pred_new <- sen.res$intercept + sen.res$b.sen * t_new
s.pred_new
sen.res$b.sen
sen.res$b.sen * t_new
s.pred_new = rbind()
s.pred_new = rbind()
for(v in 1:6){
by_month=ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res=sens.slope(by_month)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res$b.sen.lo, sen.res$b.sen.up)){
s.pred_new[,v] <- sen.res$b.sen
}
}
s.pred_new = rbind()
for(v in 1:6){
by_month=ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res=sens.slope(by_month)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res$b.sen.lo, sen.res$b.sen.up)){
s.pred_new <- sen.res$b.sen
}
}
s.pred_new
s.pred_new = matrix(NA,6,2)
for(v in 1:6){
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)){
s.pred_new[v,1] <- sen.res$b.sen
}
if(data.table::between(0, sen.res_tmin$b.sen.lo, sen.res_tmin$b.sen.up)){
s.pred_new[v,2] <- sen.res$b.sen
}
}
s.pred_new
v
s.pred_new = matrix(NA,6,2)
for(v in 1:6){
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)){
s.pred_new[v,1] <- sen.res$b.sen
}
if(data.table::between(0, sen.res_tmin$b.sen.lo, sen.res_tmin$b.sen.up)){
s.pred_new[v,2] <- sen.res$b.sen
} else{
s.pred_new[v,1:2] <- NA
}
}
s.pred_new
s.pred_new = matrix(NA,6,2)
for(v in 1:6){
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)){
s.pred_new[v,1] <- sen.res_tmax$b.sen
}
if(data.table::between(0, sen.res_tmin$b.sen.lo, sen.res_tmin$b.sen.up)){
s.pred_new[v,2] <- sen.res_tmin$b.sen
}
}
s.pred_new
t_min_trend
data_temp
prec_sort = matrix(NA,length(unique(data$year)),6)
year_sort = matrix(NA,length(unique(data$year)),6)
t_max_trend = matrix(NA,length(unique(data$year)),6)
t_min_trend = matrix(NA,length(unique(data$year)),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
t_max_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
t_min_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,4]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
colnames(prec_sort)=month.prob
colnames(year_sort)=month.prob
colnames(t_max_trend)=month.prob
colnames(t_min_trend)=month.prob
s.pred_new = matrix(NA,6,2)
for(v in 1:6){
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)){
s.pred_new[v,1] <- sen.res_tmax$b.sen
}
if(data.table::between(0, sen.res_tmin$b.sen.lo, sen.res_tmin$b.sen.up)){
s.pred_new[v,2] <- sen.res_tmin$b.sen
}
}
s.pred_new
sen.res_tmax
sen.res_tmin
sen.res_tmax$b.sen
by_month_tmin
by_month_tmax
v
prec_sort = matrix(NA,length(unique(data$year)),6)
year_sort = matrix(NA,length(unique(data$year)),6)
t_max_trend = matrix(NA,length(unique(data$year)),6)
t_min_trend = matrix(NA,length(unique(data$year)),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
t_max_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
t_min_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,4]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
colnames(prec_sort)=month.prob
colnames(year_sort)=month.prob
colnames(t_max_trend)=month.prob
colnames(t_min_trend)=month.prob
View(t_max_trend)
v=1
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmax
sen.res_tmax
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
sen.res_tmin
sen.res_tmax$b.sen.lo
sen.res_tmax$b.sen.up
s.pred_new
s.pred_new = matrix(NA,6,2)
s.pred_new
data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)
data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)==F
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)==F){
s.pred_new[v,1] <- sen.res_tmax$b.sen
}
s.pred_new
sen.res_tmin$b.sen.lo
sen.res_tmin$b.sen.up
s.pred_new = matrix(NA,6,2)
for(v in 1:6){
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)==F){
s.pred_new[v,1] <- sen.res_tmax$b.sen
}
if(data.table::between(0, sen.res_tmin$b.sen.lo, sen.res_tmin$b.sen.up)==F){
s.pred_new[v,2] <- sen.res_tmin$b.sen
}
}
s.pred_new
x
data_d = data_d_all[x]
data_d
x=2
data_d_all[x]
data_d = data_d_all[x]
data_d=read.csv(data_d,header=T,dec=".")
#attach(data_d,warn.conflicts =F)
data=aggregate(as.numeric(data_d$prec),list(data_d$year,data_d$month),sum)
data_temp=aggregate(data_d[,4:5],list(data_d$year,data_d$month),mean)
names(data)=c("year","month","value")
names(data_temp)=c("year","month","t_max","t_min")
prec_sort = matrix(NA,length(unique(data$year)),6)
year_sort = matrix(NA,length(unique(data$year)),6)
t_max_trend = matrix(NA,length(unique(data$year)),6)
t_min_trend = matrix(NA,length(unique(data$year)),6)
for (i in probabilidades$month){
prec_month = data[data$month==i,3]
year_month = data[data$month==i,1]
t_max_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,3]
t_min_trend[,i-month(Sys.Date())+1] = data_temp[data_temp$month==i,4]
prec_sort[,i-month(Sys.Date())+1] = prec_month[order(prec_month)]
year_sort[,i-month(Sys.Date())+1] = year_month[order(prec_month)]
}
colnames(prec_sort)=month.prob
colnames(year_sort)=month.prob
colnames(t_max_trend)=month.prob
colnames(t_min_trend)=month.prob
#---------------------------------------------------------------------------------#
#------------------------Cálculo tendencias para temp-----------------------------#
#---------------------------------------------------------------------------------#
s.pred_new = matrix(NA,6,2)
for(v in 1:6){
by_month_tmax = ts(start = min(data_temp$year),end = max(data_temp$year),t_max_trend[,v])
sen.res_tmax = sens.slope(by_month_tmax)
by_month_tmin = ts(start = min(data_temp$year),end = max(data_temp$year),t_min_trend[,v])
sen.res_tmin = sens.slope(by_month_tmin)
# t <- (1:length(by_month))
# s.pred <- sen.res$intercept + sen.res$b.sen * t
if(data.table::between(0, sen.res_tmax$b.sen.lo, sen.res_tmax$b.sen.up)==F){
s.pred_new[v,1] <- sen.res_tmax$b.sen
}
if(data.table::between(0, sen.res_tmin$b.sen.lo, sen.res_tmin$b.sen.up)==F){
s.pred_new[v,2] <- sen.res_tmin$b.sen
}
}
s.pred_new
esc_final_diarios
masprobable=matrix(0,nrow=100,ncol=dim(probabilidades)[2])
cat("\n Generando años más frecuentes... \n")
masprobable=sapply_pb(1:100,
function(j){
esc1=sapply(1:dim(probabilidades)[2], function(i) resampling(prec_sort[,i],probabilidades[i,4:6],year_sort[,i]))
masprobable[j,]=sapply(1:dim(probabilidades)[2],function(j) as.numeric(rownames(cbind(which(table(esc1[,j])==max(table(esc1[,j]))))))[1])
})
masprobable2=apply(t(masprobable),2,function(x) as.numeric(names(sort(table(x),T))[1:10]))
